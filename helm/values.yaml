global:
  environment: production
  imagePullPolicy: Always

secrets:
  database_url: "postgresql://postgres:PL4YAjUIdS35SHc8suhi@ip-reverser-db.cb68ik26gia3.eu-north-1.rds.amazonaws.com:5432/ipreverser"
postgresql:
  enabled: false  # Disable local PostgreSQL subchart
image:
  repository: docker.io/oluwaseun1511/ip-reverser-app
  tag: "latest"
  pullPolicy: Always
deployment:
  replicaCount: 3
  container:
    port: 3001
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      seccompProfile:
        type: RuntimeDefault
    livenessProbe:
      httpGet:
        path: /health
        port: 3001
      initialDelaySeconds: 30
      periodSeconds: 30
    readinessProbe:
      httpGet:
        path: /health
        port: 3001
      initialDelaySeconds: 10
      periodSeconds: 10
    startupProbe:
      httpGet:
        path: /health
        port: 3001
      initialDelaySeconds: 10
      periodSeconds: 10
      failureThreshold: 30
service:
  type: LoadBalancer
  port: 80
  targetPort: 3001
ingress:
  enabled: true
  className: "nginx"
  hosts:
    - host: ip-reverse.cloudknight-api.com
      paths:
        - path: /
          pathType: Prefix
configMap:
  data:
    NODE_ENV: "production"
    PORT: "3001"
    CORS_ORIGIN: "*"
  
  primary:
    persistence:
      enabled: true
      size: 8Gi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  labels:
    app: ip-reverser-app
